//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.AspNetCore.WebSockets.Internal.fx.src.System.Net.WebSockets.Client.src.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.AspNetCore.WebSockets.Internal.fx.src.System.Net.WebSockets.Client.src." +
                            "Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested security protocol is not supported..
        /// </summary>
        internal static string net_securityprotocolnotsupported {
            get {
                return ResourceManager.GetString("net_securityprotocolnotsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported for a relative URI..
        /// </summary>
        internal static string net_uri_NotAbsolute {
            get {
                return ResourceManager.GetString("net_uri_NotAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket client request requested &apos;{0}&apos; protocol(s), but server is only accepting &apos;{1}&apos; protocol(s)..
        /// </summary>
        internal static string net_WebSockets_AcceptUnsupportedProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_AcceptUnsupportedProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already one outstanding &apos;{0}&apos; call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time..
        /// </summary>
        internal static string net_Websockets_AlreadyOneOutstandingOperation {
            get {
                return ResourceManager.GetString("net_Websockets_AlreadyOneOutstandingOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket has already been started..
        /// </summary>
        internal static string net_WebSockets_AlreadyStarted {
            get {
                return ResourceManager.GetString("net_WebSockets_AlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message type &apos;{0}&apos; is not allowed for the &apos;{1}&apos; operation. Valid message types are: &apos;{2}, {3}&apos;. To close the WebSocket, use the &apos;{4}&apos; operation instead. .
        /// </summary>
        internal static string net_WebSockets_Argument_InvalidMessageType {
            get {
                return ResourceManager.GetString("net_WebSockets_Argument_InvalidMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must be a value greater than {0}..
        /// </summary>
        internal static string net_WebSockets_ArgumentOutOfRange_TooSmall {
            get {
                return ResourceManager.GetString("net_WebSockets_ArgumentOutOfRange_TooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal WebSocket error occurred. Please see the innerException, if present, for more details. .
        /// </summary>
        internal static string net_WebSockets_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket protocol &apos;{0}&apos; is invalid because it contains the invalid character &apos;{1}&apos;..
        /// </summary>
        internal static string net_WebSockets_InvalidCharInProtocolString {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCharInProtocolString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The close status code &apos;{0}&apos; is reserved for system use only and cannot be specified when calling this method..
        /// </summary>
        internal static string net_WebSockets_InvalidCloseStatusCode {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCloseStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The close status description &apos;{0}&apos; is too long. The UTF8-representation of the status description must not be longer than {1} bytes..
        /// </summary>
        internal static string net_WebSockets_InvalidCloseStatusDescription {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCloseStatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty string is not a valid subprotocol value. Please use \&quot;null\&quot; to specify no value..
        /// </summary>
        internal static string net_WebSockets_InvalidEmptySubProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidEmptySubProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; header value &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string net_WebSockets_InvalidResponseHeader {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidResponseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket is in an invalid state (&apos;{0}&apos;) for this operation. Valid states are: &apos;{1}&apos;.
        /// </summary>
        internal static string net_WebSockets_InvalidState {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; instance cannot be used for communication because it has been transitioned into the &apos;{1}&apos; state..
        /// </summary>
        internal static string net_WebSockets_InvalidState_ClosedOrAborted {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidState_ClosedOrAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate protocols are not allowed: &apos;{0}&apos;..
        /// </summary>
        internal static string net_WebSockets_NoDuplicateProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_NoDuplicateProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket is not connected..
        /// </summary>
        internal static string net_WebSockets_NotConnected {
            get {
                return ResourceManager.GetString("net_WebSockets_NotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The close status description &apos;{0}&apos; is invalid. When using close status code &apos;{1}&apos; the description must be null..
        /// </summary>
        internal static string net_WebSockets_ReasonNotNull {
            get {
                return ResourceManager.GetString("net_WebSockets_ReasonNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Uris starting with &apos;ws://&apos; or &apos;wss://&apos; are supported..
        /// </summary>
        internal static string net_WebSockets_Scheme {
            get {
                return ResourceManager.GetString("net_WebSockets_Scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebSocket protocol is not supported on this platform..
        /// </summary>
        internal static string net_WebSockets_UnsupportedPlatform {
            get {
                return ResourceManager.GetString("net_WebSockets_UnsupportedPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client certificate was not found in the personal (\&quot;MY\&quot;) certificate store. In UWP, client certificates are only supported if they have been added to that certificate store..
        /// </summary>
        internal static string net_WebSockets_UWPClientCertSupportRequiresCertInPersonalCertificateStore {
            get {
                return ResourceManager.GetString("net_WebSockets_UWPClientCertSupportRequiresCertInPersonalCertificateStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client certificates in UWP are unsupported in Windows 10 version 1703 and earlier versions. Please upgrade Windows 10 to a later release..
        /// </summary>
        internal static string net_WebSockets_UWPClientCertSupportRequiresWindows10GreaterThan1703 {
            get {
                return ResourceManager.GetString("net_WebSockets_UWPClientCertSupportRequiresWindows10GreaterThan1703", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to the remote server.
        /// </summary>
        internal static string net_webstatus_ConnectFailure {
            get {
                return ResourceManager.GetString("net_webstatus_ConnectFailure", resourceCulture);
            }
        }
    }
}
